// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v5.29.3
// source: proto/neural_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PredictRequest contains a single game state to evaluate
type PredictRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Features  []float32 `protobuf:"fixed32,1,rep,packed,name=features,proto3" json:"features,omitempty"`           // Neural network input features
	ModelType string    `protobuf:"bytes,2,opt,name=model_type,json=modelType,proto3" json:"model_type,omitempty"` // "policy" or "value"
}

func (x *PredictRequest) Reset() {
	*x = PredictRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_neural_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredictRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictRequest) ProtoMessage() {}

func (x *PredictRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_neural_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictRequest.ProtoReflect.Descriptor instead.
func (*PredictRequest) Descriptor() ([]byte, []int) {
	return file_proto_neural_service_proto_rawDescGZIP(), []int{0}
}

func (x *PredictRequest) GetFeatures() []float32 {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *PredictRequest) GetModelType() string {
	if x != nil {
		return x.ModelType
	}
	return ""
}

// PredictResponse contains output probabilities or value
type PredictResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Probabilities []float32 `protobuf:"fixed32,1,rep,packed,name=probabilities,proto3" json:"probabilities,omitempty"` // Output probabilities for policy network
	Value         float32   `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`                        // Output value for value network
	BestMove      int32     `protobuf:"varint,3,opt,name=best_move,json=bestMove,proto3" json:"best_move,omitempty"`   // Index of highest probability move
}

func (x *PredictResponse) Reset() {
	*x = PredictResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_neural_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredictResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictResponse) ProtoMessage() {}

func (x *PredictResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_neural_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictResponse.ProtoReflect.Descriptor instead.
func (*PredictResponse) Descriptor() ([]byte, []int) {
	return file_proto_neural_service_proto_rawDescGZIP(), []int{1}
}

func (x *PredictResponse) GetProbabilities() []float32 {
	if x != nil {
		return x.Probabilities
	}
	return nil
}

func (x *PredictResponse) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *PredictResponse) GetBestMove() int32 {
	if x != nil {
		return x.BestMove
	}
	return 0
}

// BatchPredictRequest contains multiple game states to evaluate
type BatchPredictRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs    []*InputFeatures `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`                        // Batch of neural network inputs
	ModelType string           `protobuf:"bytes,2,opt,name=model_type,json=modelType,proto3" json:"model_type,omitempty"` // "policy" or "value"
}

func (x *BatchPredictRequest) Reset() {
	*x = BatchPredictRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_neural_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchPredictRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchPredictRequest) ProtoMessage() {}

func (x *BatchPredictRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_neural_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchPredictRequest.ProtoReflect.Descriptor instead.
func (*BatchPredictRequest) Descriptor() ([]byte, []int) {
	return file_proto_neural_service_proto_rawDescGZIP(), []int{2}
}

func (x *BatchPredictRequest) GetInputs() []*InputFeatures {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *BatchPredictRequest) GetModelType() string {
	if x != nil {
		return x.ModelType
	}
	return ""
}

// InputFeatures represents a single input in a batch
type InputFeatures struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Features []float32 `protobuf:"fixed32,1,rep,packed,name=features,proto3" json:"features,omitempty"` // Neural network input features
}

func (x *InputFeatures) Reset() {
	*x = InputFeatures{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_neural_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputFeatures) ProtoMessage() {}

func (x *InputFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_proto_neural_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputFeatures.ProtoReflect.Descriptor instead.
func (*InputFeatures) Descriptor() ([]byte, []int) {
	return file_proto_neural_service_proto_rawDescGZIP(), []int{3}
}

func (x *InputFeatures) GetFeatures() []float32 {
	if x != nil {
		return x.Features
	}
	return nil
}

// BatchPredictResponse contains outputs for multiple inputs
type BatchPredictResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outputs []*PredictResponse `protobuf:"bytes,1,rep,name=outputs,proto3" json:"outputs,omitempty"` // Output for each input in the batch
}

func (x *BatchPredictResponse) Reset() {
	*x = BatchPredictResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_neural_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchPredictResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchPredictResponse) ProtoMessage() {}

func (x *BatchPredictResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_neural_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchPredictResponse.ProtoReflect.Descriptor instead.
func (*BatchPredictResponse) Descriptor() ([]byte, []int) {
	return file_proto_neural_service_proto_rawDescGZIP(), []int{4}
}

func (x *BatchPredictResponse) GetOutputs() []*PredictResponse {
	if x != nil {
		return x.Outputs
	}
	return nil
}

// ModelInfoRequest to query model details
type ModelInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelType string `protobuf:"bytes,1,opt,name=model_type,json=modelType,proto3" json:"model_type,omitempty"` // "policy" or "value"
}

func (x *ModelInfoRequest) Reset() {
	*x = ModelInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_neural_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelInfoRequest) ProtoMessage() {}

func (x *ModelInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_neural_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelInfoRequest.ProtoReflect.Descriptor instead.
func (*ModelInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_neural_service_proto_rawDescGZIP(), []int{5}
}

func (x *ModelInfoRequest) GetModelType() string {
	if x != nil {
		return x.ModelType
	}
	return ""
}

// ModelInfoResponse with model details
type ModelInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputSize  int32  `protobuf:"varint,1,opt,name=input_size,json=inputSize,proto3" json:"input_size,omitempty"`    // Number of input features
	HiddenSize int32  `protobuf:"varint,2,opt,name=hidden_size,json=hiddenSize,proto3" json:"hidden_size,omitempty"` // Hidden layer size
	OutputSize int32  `protobuf:"varint,3,opt,name=output_size,json=outputSize,proto3" json:"output_size,omitempty"` // Number of outputs
	Device     string `protobuf:"bytes,4,opt,name=device,proto3" json:"device,omitempty"`                            // "cpu" or "gpu"
	Framework  string `protobuf:"bytes,5,opt,name=framework,proto3" json:"framework,omitempty"`                      // "tensorflow", "pytorch", etc.
}

func (x *ModelInfoResponse) Reset() {
	*x = ModelInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_neural_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelInfoResponse) ProtoMessage() {}

func (x *ModelInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_neural_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelInfoResponse.ProtoReflect.Descriptor instead.
func (*ModelInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_neural_service_proto_rawDescGZIP(), []int{6}
}

func (x *ModelInfoResponse) GetInputSize() int32 {
	if x != nil {
		return x.InputSize
	}
	return 0
}

func (x *ModelInfoResponse) GetHiddenSize() int32 {
	if x != nil {
		return x.HiddenSize
	}
	return 0
}

func (x *ModelInfoResponse) GetOutputSize() int32 {
	if x != nil {
		return x.OutputSize
	}
	return 0
}

func (x *ModelInfoResponse) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *ModelInfoResponse) GetFramework() string {
	if x != nil {
		return x.Framework
	}
	return ""
}

var File_proto_neural_service_proto protoreflect.FileDescriptor

var file_proto_neural_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x65, 0x75, 0x72, 0x61, 0x6c, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6e, 0x65,
	0x75, 0x72, 0x61, 0x6c, 0x22, 0x4b, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x6a, 0x0a, 0x0f, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0d, 0x70, 0x72, 0x6f,
	0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x22, 0x63, 0x0a,
	0x13, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x75, 0x72, 0x61, 0x6c, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x06, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x2b, 0x0a, 0x0d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22,
	0x49, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x65, 0x75, 0x72, 0x61,
	0x6c, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x22, 0x31, 0x0a, 0x10, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0xaa, 0x01,
	0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x32, 0xe1, 0x01, 0x0a, 0x0d, 0x4e,
	0x65, 0x75, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x07,
	0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x6e, 0x65, 0x75, 0x72, 0x61, 0x6c,
	0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x6e, 0x65, 0x75, 0x72, 0x61, 0x6c, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x6e, 0x65, 0x75,
	0x72, 0x61, 0x6c, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6e, 0x65, 0x75, 0x72, 0x61, 0x6c,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e, 0x6e, 0x65, 0x75, 0x72, 0x61, 0x6c,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x6e, 0x65, 0x75, 0x72, 0x61, 0x6c, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x31,
	0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x61, 0x63,
	0x68, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x6e, 0x65, 0x75, 0x72, 0x61, 0x6c, 0x5f, 0x72, 0x70, 0x73,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6e, 0x65, 0x75, 0x72, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_neural_service_proto_rawDescOnce sync.Once
	file_proto_neural_service_proto_rawDescData = file_proto_neural_service_proto_rawDesc
)

func file_proto_neural_service_proto_rawDescGZIP() []byte {
	file_proto_neural_service_proto_rawDescOnce.Do(func() {
		file_proto_neural_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_neural_service_proto_rawDescData)
	})
	return file_proto_neural_service_proto_rawDescData
}

var file_proto_neural_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_neural_service_proto_goTypes = []interface{}{
	(*PredictRequest)(nil),       // 0: neural.PredictRequest
	(*PredictResponse)(nil),      // 1: neural.PredictResponse
	(*BatchPredictRequest)(nil),  // 2: neural.BatchPredictRequest
	(*InputFeatures)(nil),        // 3: neural.InputFeatures
	(*BatchPredictResponse)(nil), // 4: neural.BatchPredictResponse
	(*ModelInfoRequest)(nil),     // 5: neural.ModelInfoRequest
	(*ModelInfoResponse)(nil),    // 6: neural.ModelInfoResponse
}
var file_proto_neural_service_proto_depIdxs = []int32{
	3, // 0: neural.BatchPredictRequest.inputs:type_name -> neural.InputFeatures
	1, // 1: neural.BatchPredictResponse.outputs:type_name -> neural.PredictResponse
	0, // 2: neural.NeuralService.Predict:input_type -> neural.PredictRequest
	2, // 3: neural.NeuralService.BatchPredict:input_type -> neural.BatchPredictRequest
	5, // 4: neural.NeuralService.GetModelInfo:input_type -> neural.ModelInfoRequest
	1, // 5: neural.NeuralService.Predict:output_type -> neural.PredictResponse
	4, // 6: neural.NeuralService.BatchPredict:output_type -> neural.BatchPredictResponse
	6, // 7: neural.NeuralService.GetModelInfo:output_type -> neural.ModelInfoResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_neural_service_proto_init() }
func file_proto_neural_service_proto_init() {
	if File_proto_neural_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_neural_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredictRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_neural_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredictResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_neural_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchPredictRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_neural_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputFeatures); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_neural_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchPredictResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_neural_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_neural_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_neural_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_neural_service_proto_goTypes,
		DependencyIndexes: file_proto_neural_service_proto_depIdxs,
		MessageInfos:      file_proto_neural_service_proto_msgTypes,
	}.Build()
	File_proto_neural_service_proto = out.File
	file_proto_neural_service_proto_rawDesc = nil
	file_proto_neural_service_proto_goTypes = nil
	file_proto_neural_service_proto_depIdxs = nil
}
